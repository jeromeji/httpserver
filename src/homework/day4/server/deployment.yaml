apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: httpserver
  name: httpserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 15
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      labels:
        app: httpserver
    spec:
      containers:
        - name: httpserver
          image:  jeromeji/httpserver:v1.1
          ports:
            - containerPort: 80
          lifecycle:
            postStart:
              exec:
                command: ['/bin/sh', '-c', 'echo env is ok']
            preStop:
              exec:
                command: [ "/bin/sh","-c","ps aux|grep server|grep -v grep|awk -F ' ' '{print $2}'|xargs kill -12" ]
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 80
            initialDelaySeconds: 15 
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 30Mi
            limits:
              cpu: 100m
              memory: 50Mi
          envFrom:
            - configMapRef:
                name: httpserver-config
